from aiogram.filters.callback_data import CallbackData
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder
from database.db import get_product_by_id


class AdminOrdersPaginator(CallbackData, prefix="admin_order_page"):
    action: str
    page: int


class AdminBookingsPaginator(CallbackData, prefix="admin_booking_page"):
    action: str
    page: int
    period: str  # today, week, month


class AdminSetOrderStatus(CallbackData, prefix="admin_set_status"):
    order_id: int
    status: str # 'assembled' –∏–ª–∏ 'shipped'


class AdminEditOrder(CallbackData, prefix="admin_edit_order"):
    action: str  # 'remove_item', 'finish'
    order_id: int
    item_id: str | None = None # ID —Ç–æ–≤–∞—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è


def get_admin_keyboard() -> InlineKeyboardMarkup:
    """–û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏."""
    builder = InlineKeyboardBuilder()
    builder.button(text="üóìÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å—è–º–∏", callback_data="admin_booking_management")
    builder.button(text="üõçÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏", callback_data="admin_order_management")
    builder.button(text="üéÅ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞–º–∏", callback_data="admin_promocode_management")
    builder.button(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_stats")
    builder.button(text="üì¨ –†–∞—Å—Å—ã–ª–∫–∞", callback_data="admin_broadcast")
    builder.button(text="üö∑ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞–º–∏", callback_data="admin_block_management")
    builder.adjust(1)
    return builder.as_markup()

def get_promocode_management_keyboard():
    builder = InlineKeyboardBuilder()
    builder.button(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥", callback_data="admin_add_promocode_start")
    builder.button(text="üìã –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã", callback_data="admin_show_promocodes")
    builder.button(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_back_to_main")
    builder.adjust(1)
    return builder.as_markup()

def get_promocode_type_keyboard():
    builder = InlineKeyboardBuilder()
    builder.button(text="üõçÔ∏è –î–ª—è –º–∞–≥–∞–∑–∏–Ω–∞", callback_data="admin_add_promo_type_shop")
    builder.button(text="üóìÔ∏è –î–ª—è –¥–µ—Ç–µ–π–ª–∏–Ω–≥–∞ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)", callback_data="admin_add_promo_type_detailing")
    builder.button(text="üîô –ù–∞–∑–∞–¥", callback_data="admin_promocode_management")
    builder.adjust(1)
    return builder.as_markup()

def get_booking_management_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å—è–º–∏."""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="–°–µ–≥–æ–¥–Ω—è", callback_data="admin_bookings_today"),
        InlineKeyboardButton(text="–ù–µ–¥–µ–ª—è", callback_data="admin_bookings_week"),
        InlineKeyboardButton(text="–ú–µ—Å—è—Ü", callback_data="admin_bookings_month")
    )
    builder.row(InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å –ø–æ ID", callback_data="admin_cancel_booking_start"))
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_back_to_main"))
    return builder.as_markup()

def get_block_management_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞–º–∏."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å", callback_data="admin_block_user"))
    builder.row(InlineKeyboardButton(text="üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å", callback_data="admin_unblock_user"))
    builder.row(InlineKeyboardButton(text="üìã –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö", callback_data="admin_show_blocked"))
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_back_to_main"))
    return builder.as_markup()

def get_back_to_menu_keyboard(menu_callback: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π '–ù–∞–∑–∞–¥'."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=menu_callback))
    return builder.as_markup()

def get_stats_menu_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –º–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏."""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üìà –ü–æ –∑–∞–ø–∏—Å—è–º (—Ç–µ–∫—Å—Ç)", callback_data="admin_stats_bookings"),
        InlineKeyboardButton(text="üõí –ü–æ –º–∞–≥–∞–∑–∏–Ω—É (—Ç–µ–∫—Å—Ç)", callback_data="admin_stats_shop")
    )
    builder.row(
        InlineKeyboardButton(text="üìä –ì—Ä–∞—Ñ–∏–∫ –ø–æ —É—Å–ª—É–≥–∞–º", callback_data="admin_chart_bookings"),
        InlineKeyboardButton(text="üìä –ì—Ä–∞—Ñ–∏–∫ –ø–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞–º", callback_data="admin_chart_shop")
    )
    builder.row(
        InlineKeyboardButton(text="üìÑ –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–ø–∏—Å–µ–π (CSV)", callback_data="admin_export_bookings_csv"),
        InlineKeyboardButton(text="üìÑ –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–∫–∞–∑–æ–≤ (CSV)", callback_data="admin_export_orders_csv")
    )
    builder.row(InlineKeyboardButton(text="üìÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥", callback_data="admin_stats_custom_period"))
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_back_to_main"))
    return builder.as_markup()

def get_order_management_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞–º–∏."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üìã –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã", callback_data="admin_last_orders"))
    builder.row(InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Å–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞", callback_data="admin_edit_order_start"))
    builder.row(InlineKeyboardButton(text="üîÑ –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞", callback_data="admin_change_order_status_start"))
    builder.row(InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑ –ø–æ ID", callback_data="admin_cancel_order_start"))
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_back_to_main"))
    return builder.as_markup()


def get_broadcast_confirmation_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üöÄ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º", callback_data="admin_broadcast_confirm"))
    builder.row(InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="admin_broadcast_cancel"))
    return builder.as_markup()


def get_admin_paginator(page: int, total_pages: int, paginator_type: AdminOrdersPaginator | AdminBookingsPaginator, back_callback: str) -> InlineKeyboardMarkup:
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–∞–≥–∏–Ω–∞—Ç–æ—Ä –¥–ª—è –∞–¥–º–∏–Ω–∫–∏."""
    builder = InlineKeyboardBuilder()
    pagination_row = []

    if page > 0:
        pagination_row.append(InlineKeyboardButton(text="< –ù–∞–∑–∞–¥", callback_data=paginator_type(action="prev", page=page).pack()))

    if total_pages > 1:
        pagination_row.append(InlineKeyboardButton(text=f"{page + 1} / {total_pages}", callback_data="ignore_page_count"))

    if page < total_pages - 1:
        pagination_row.append(InlineKeyboardButton(text="–í–ø–µ—Ä–µ–¥ >", callback_data=paginator_type(action="next", page=page).pack()))

    if pagination_row:
        builder.row(*pagination_row)

    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data=back_callback))
    return builder.as_markup()


def get_set_order_status_keyboard(order_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚úÖ –°–æ–±—Ä–∞–Ω", callback_data=AdminSetOrderStatus(order_id=order_id, status="assembled").pack()))
    builder.row(InlineKeyboardButton(text="üöö –û—Ç–ø—Ä–∞–≤–ª–µ–Ω", callback_data=AdminSetOrderStatus(order_id=order_id, status="shipped").pack()))
    return builder.as_markup()


def get_new_order_admin_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞ –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚û°Ô∏è –ö —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∑–∞–∫–∞–∑–∞–º–∏", callback_data="admin_order_management"))
    return builder.as_markup()


async def get_order_editing_keyboard(order: dict) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ—Å—Ç–∞–≤–∞ –∑–∞–∫–∞–∑–∞."""
    builder = InlineKeyboardBuilder()
    cart = order.get('cart', {})
    order_id = order.get('id')

    if not cart:
        builder.row(InlineKeyboardButton(text="–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞", callback_data="ignore"))
    else:
        for item_id, quantity in cart.items():
            product = await get_product_by_id(item_id) or {}
            product_name = product.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–æ–≤–∞—Ä')
            builder.row(
                InlineKeyboardButton(
                    text=f"{product_name} ({quantity} —à—Ç.)",
                    callback_data="ignore"
                ),
                InlineKeyboardButton(
                    text="‚ùå –£–¥–∞–ª–∏—Ç—å 1 —à—Ç.",
                    callback_data=AdminEditOrder(action="remove_item", order_id=order_id, item_id=item_id).pack()
                )
            )

    builder.row(InlineKeyboardButton(text="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", callback_data=AdminEditOrder(action="finish", order_id=order_id).pack()))
    return builder.as_markup()