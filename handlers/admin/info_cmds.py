import json
import logging
from aiogram import Router, Bot, F
from aiogram.filters import Command
from aiogram.types import Message, InputMediaPhoto, InputMediaVideo
from aiogram.filters.command import CommandObject
from database.db import get_booking_by_id, update_user_note
from utils.constants import ALL_NAMES

logger = logging.getLogger(__name__)
router = Router()

def format_booking_details_for_admin(booking: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø–∏—Å–∏ –¥–ª—è –∞–¥–º–∏–Ω–∞."""
    # details_json –∏–∑ –±–∞–∑—ã –ø—Ä–∏—Ö–æ–¥–∏—Ç –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞, –µ–µ –Ω—É–∂–Ω–æ —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å
    details_raw = booking.get('details_json')
    details = {}
    if isinstance(details_raw, str):
        details = json.loads(details_raw)
    elif isinstance(details_raw, dict):
        details = details_raw
    
    service_details_lines = []
    if car_size := details.get('car_size'):
        service_details_lines.append(f"  - –†–∞–∑–º–µ—Ä: {ALL_NAMES.get(car_size, car_size)}")
    if service_type := details.get('service_type'):
        service_details_lines.append(f"  - –¢–∏–ø: {ALL_NAMES.get(service_type, service_type)}")
    if interior_type := details.get('interior_type'):
        service_details_lines.append(f"  - –°–∞–ª–æ–Ω: {ALL_NAMES.get(interior_type, interior_type)}")
    if dirt_level := details.get('dirt_level'):
        service_details_lines.append(f"  - –ó–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–µ: {ALL_NAMES.get(dirt_level, dirt_level)}")
    
    service_details_str = "\n".join(service_details_lines)
    if service_details_str:
        service_details_str = "\n" + service_details_str

    text = (
        f"üìÑ <b>–î–µ—Ç–∞–ª–∏ –∑–∞–ø–∏—Å–∏ #{booking['id']}</b>\n"
        f"<b>–°—Ç–∞—Ç—É—Å:</b> {booking.get('status', 'N/A')}\n\n"
        f"üóìÔ∏è <b>–î–∞—Ç–∞:</b> {booking.get('date')} –≤ {booking.get('time')}\n\n"
        f"<b>–£—Å–ª—É–≥–∞:</b> {booking.get('service_name', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}{service_details_str}\n\n"
        f"üí∞ <b>–§–∏–Ω–∞–Ω—Å—ã:</b>\n"
        f"  - –°—Ç–æ–∏–º–æ—Å—Ç—å: {booking.get('price_rub', 0)} —Ä—É–±.\n"
        f"  - –°–∫–∏–¥–∫–∞: {booking.get('discount_rub', 0)} —Ä—É–±.\n"
        f"  - –ü—Ä–æ–º–æ–∫–æ–¥: {booking.get('promocode') or '–ù–µ—Ç'}\n\n"
        f"üë§ <b>–ö–ª–∏–µ–Ω—Ç:</b>\n"
        f"  - –ò–º—è: {booking.get('user_full_name', 'N/A')}\n"
        f"  - ID: <code>{booking.get('user_id')}</code>\n"
        f"  - Username: @{booking.get('user_username') or '—Å–∫—Ä—ã—Ç'}\n"
        f"  - –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω: {'–î–∞' if booking.get('user_is_blocked') else '–ù–µ—Ç'}\n"
        f"  - üìù <b>–ó–∞–º–µ—Ç–∫–∞:</b>\n<pre>{booking.get('user_internal_note') or '–ü—É—Å—Ç–æ'}</pre>\n\n"
    )
    if comment := booking.get('comment'):
        text += f"<b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫–ª–∏–µ–Ω—Ç–∞:</b>\n<pre>{comment}</pre>\n"
    
    return text

@router.message(Command("binfo"))
async def get_booking_info(message: Message, command: CommandObject, bot: Bot):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–¥–º–∏–Ω—É –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø–∏—Å–∏ –ø–æ –µ—ë ID, –≤–∫–ª—é—á–∞—è –º–µ–¥–∏–∞.
    –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /binfo <booking_id>
    """
    if not command.args or not command.args.isdigit():
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ID –∑–∞–ø–∏—Å–∏. –ü—Ä–∏–º–µ—Ä: <code>/binfo 123</code>")
        return

    booking_id = int(command.args)
    booking = await get_booking_by_id(booking_id)

    if not booking:
        await message.answer(f"–ó–∞–ø–∏—Å—å —Å ID <code>{booking_id}</code> –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    info_text = format_booking_details_for_admin(booking)
    
    media_files = booking.get("media_files", [])
    if not media_files:
        await message.answer(info_text)
    elif len(media_files) == 1:
        media = media_files[0]
        if media['type'] == 'photo':
            await bot.send_photo(message.chat.id, photo=media['file_id'], caption=info_text)
        else:
            await bot.send_video(message.chat.id, video=media['file_id'], caption=info_text)
    else:
        await message.answer(info_text)
        media_group = [
            InputMediaPhoto(media=m['file_id']) if m['type'] == 'photo'
            else InputMediaVideo(media=m['file_id'])
            for m in media_files
        ]
        await bot.send_media_group(message.chat.id, media=media_group)

@router.message(Command("note"))
async def add_user_note(message: Message, command: CommandObject):
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é –∑–∞–º–µ—Ç–∫—É –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.
    –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /note <user_id> <—Ç–µ–∫—Å—Ç –∑–∞–º–µ—Ç–∫–∏>
    –ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É: /note <user_id>
    """
    if not command.args:
        await message.answer(
            "<b>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É:</b>\n"
            "<code>/note &lt;ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è&gt; &lt;—Ç–µ–∫—Å—Ç –∑–∞–º–µ—Ç–∫–∏&gt;</code> - –¥–æ–±–∞–≤–∏—Ç—å/–∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–º–µ—Ç–∫—É.\n"
            "<code>/note &lt;ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è&gt;</code> - —É–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É."
        )
        return

    args = command.args.split(maxsplit=1)
    user_id_str = args[0]
    note_text = args[1] if len(args) > 1 else ""

    if not user_id_str.isdigit():
        await message.answer("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.")
        return
    
    user_id = int(user_id_str)
    success = await update_user_note(user_id, note_text)

    if success:
        await message.answer(f"‚úÖ –ó–∞–º–µ—Ç–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <code>{user_id}</code> —É—Å–ø–µ—à–Ω–æ {'–æ–±–Ω–æ–≤–ª–µ–Ω–∞' if note_text else '—É–¥–∞–ª–µ–Ω–∞'}.")
    else:
        await message.answer(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <code>{user_id}</code>. –í–æ–∑–º–æ–∂–Ω–æ, —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ.")